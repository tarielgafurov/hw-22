{"version":3,"sources":["utils/hooks/UseInput.js","components/SimpleInput.js","App.js","index.js"],"names":["ENTERED","TOUCHED","reducerFn","state","action","type","value","enteredValue","isTouched","useInput","validateState","useReducer","dispatchFn","valueIsValid","hasError","isValid","valueChangeHandler","e","target","inputBlurHandler","SimpleInput","props","trim","enteredName","enteredNameIsValid","nameInputHasError","nameChangeHandler","nameBlurChangeHandler","includes","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurChangeHandler","formIsValid","nameInputClasses","emailInputClasses","onSubmit","event","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEIA,EAAU,UACVC,EAAU,UAERC,EAAY,SAACC,EAAQC,GACvB,OAAGA,EAAOC,OAASL,EACR,2BACAG,GADP,IAEIG,MAAQF,EAAOG,eAGpBH,EAAOC,OAASJ,EACR,2BACAE,GADP,IAEIK,WAAY,SAHpB,GAQSC,EAAW,SAACC,GACrB,MAA6BC,qBAAWT,EAAY,CAChDI,MAAQ,GACRE,WAAY,IAFhB,mBAAOL,EAAP,KAAeS,EAAf,KAKIC,EAAeH,EAAcP,EAAMG,OACnCQ,GAAYD,GAAgBV,EAAMK,UAUxC,MAAO,CACHF,MAAOH,EAAMG,MACbS,QAASF,EACTC,WACAE,mBAZuB,SAACC,GACxBL,EAAW,CAACP,KAAOL,EAAUO,aAAaU,EAAEC,OAAOZ,SAYnDa,iBATqB,SAACF,GACtBL,EAAW,CAACP,KAAOJ,EAAUO,WAAY,O,OC2BhCY,EAzDK,SAACC,GACnB,MAMKZ,GAAS,SAACH,GAAD,MAA2B,KAAjBA,EAAMgB,UALtBC,EADR,EACEjB,MACQkB,EAFV,EAEET,QACSU,EAHX,EAGEX,SACmBY,EAJrB,EAIEV,mBACiBW,EALnB,EAKER,iBAEF,EAMKV,GAAS,SAACH,GAAD,OAAUA,EAAMsB,SAAS,QAL/BC,EADR,EACEvB,MACQwB,EAFV,EAEEf,QACSgB,EAHX,EAGEjB,SACmBkB,EAJrB,EAIEhB,mBACiBiB,EALnB,EAKEd,iBAEEe,GAAc,EACfV,GAAsBM,IACvBI,GAAc,GAEhB,IAMMC,EAAoBV,EAAoB,uBAAyB,eACjEW,EAAoBL,EAAqB,uBAAyB,eACxE,OACE,uBAAMM,SATsB,SAACC,GAC7BA,EAAMC,kBAQN,UACE,sBAAKC,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,uBACA,uBACEpC,KAAK,OACLqC,GAAG,OACHpC,MAAOiB,EACPoB,SAAUjB,EACVkB,OAAQjB,IAETF,GAAqB,0DAExB,sBAAKe,UAAWJ,EAAhB,UACA,uBAAOK,QAAQ,OAAf,wBACE,uBACEpC,KAAK,OACLqC,GAAG,OACHpC,MAAOuB,EACPc,SAAUX,EACVY,OAAQX,IAERF,GAAsB,2DAE1B,qBAAKS,UAAU,eAAf,SACE,wBAAQK,UAAWX,EAAnB,0BC5COY,MATf,WACE,OACE,qBAAKN,UAAU,MAAf,SAEE,cAAC,EAAD,OCDNO,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f1bab6af.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nlet ENTERED = \"ENTERED\"\r\nlet TOUCHED = 'TOUCHED'\r\n\r\nconst reducerFn = (state , action) =>  {\r\n    if(action.type === ENTERED){\r\n        return {\r\n            ...state,\r\n            value : action.enteredValue,\r\n        }\r\n    }\r\n    if(action.type === TOUCHED){\r\n        return {\r\n            ...state ,\r\n            isTouched : true,\r\n        }\r\n    }\r\n}\r\n\r\nexport const useInput = (validateState) => {\r\n    const [state , dispatchFn] = useReducer(reducerFn , {\r\n        value : \"\",\r\n        isTouched : false\r\n    })\r\n\r\n  const valueIsValid = validateState(state.value) // true || false\r\n  const hasError = !valueIsValid && state.isTouched \r\n\r\n  const valueChangeHandler = (e) => {\r\n      dispatchFn({type : ENTERED , enteredValue:e.target.value})\r\n  }\r\n\r\n  const inputBlurHandler = (e) => {\r\n      dispatchFn({type : TOUCHED , isTouched : false})\r\n  }\r\n\r\n  return {\r\n      value: state.value,\r\n      isValid: valueIsValid,\r\n      hasError,\r\n      valueChangeHandler,\r\n      inputBlurHandler,\r\n  }\r\n\r\n};\r\n","// import {useInput} from '../utils/hooks/UseInput'\nimport { useInput } from '../utils/hooks/UseInput'\n\n\nconst SimpleInput = (props) => {\n  const {\n    value:enteredName,\n    isValid:enteredNameIsValid,\n    hasError:nameInputHasError,\n    valueChangeHandler:nameChangeHandler,\n    inputBlurHandler:nameBlurChangeHandler,\n  } =  useInput((value)=> value.trim() !== '');\n  const {\n    value:enteredEmail,\n    isValid:enteredEmailIsValid,\n    hasError:emailInputHasError,\n    valueChangeHandler:emailChangeHandler,\n    inputBlurHandler:emailBlurChangeHandler,\n  } =  useInput((value)=> value.includes('@'))\n  let formIsValid = false\n  if(enteredNameIsValid && enteredEmailIsValid){\n    formIsValid = true\n  }\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if(!enteredNameIsValid) {\n      return\n    }\n  };\n  const nameInputClasses =  nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurChangeHandler}\n        />\n        {nameInputHasError && <p>Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses}>\n      <label htmlFor='name'>Your Email</label>\n        <input\n          type='text'\n          id='name'\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurChangeHandler}\n        />\n         {emailInputHasError && <p>Email entred empty none</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;\n","\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <BasicForm/> */}\n      <SimpleInput/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}